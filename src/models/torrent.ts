/**
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import { FileStats, Label, Peer, PeersFrom, Tracker, TrackerStats } from ".";

/**
 * 
 * @export
 * @interface Torrent
 */
export interface Torrent {
     /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    activityDate: number;
     /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    addedDate: number;
     /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    bandwidthPriority: number;
     /**
     * 
     * @type {string}
     * @memberof Torrent
     */
    comment: string;
     /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    corruptEver: number;
     /**
     * 
     * @type {string}
     * @memberof Torrent
     */
    creator: string;
     /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    dateCreated: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    desiredAvailable: number;
     /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    doneDate: number;
    /**
     * 
     * @type {string}
     * @memberof Torrent
     */
    downloadDir: string;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    downloadedEver: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    downloadLimit: number;
    /**
     * 
     * @type {boolean}
     * @memberof Torrent
     */
    downloadLimited: boolean;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    editDate: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    error: number;
    /**
     * 
     * @type {string}
     * @memberof Torrent
     */
    errorString: string;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    eta: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    etaIdle: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    fileCount: number;
    /**
     * 
     * @type {Array&lt;any&gt;}
     * @memberof Torrent
     */
    files: Array<File>;
    /**
     * 
     * @type {Array&lt;FileStats&gt;}
     * @memberof Torrent
     */
    fileStats: Array<FileStats>;
    /**
     * 
     * @type {string}
     * @memberof Torrent
     */
    hashString: string;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    haveUnchecked: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    haveValid: number;
    /**
     * 
     * @type {boolean}
     * @memberof Torrent
     */
    honorsSessionLimits: boolean;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    id: number;
    /**
     * 
     * @type {boolean}
     * @memberof Torrent
     */
    isFinished: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Torrent
     */
    isPrivate: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Torrent
     */
    isStalled: boolean;
    /**
     * 
     * @type {Array&lt;Label&gt;}
     * @memberof Torrent
     */
    labels: Array<Label>;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    leftUntilDone: number;
    /**
     * 
     * @type {string}
     * @memberof Torrent
     */
    magnetLink: string;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    manualAnnounceTime: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    maxConnectedPeers: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    metadataPercentComplete: number;
    /**
     * 
     * @type {string}
     * @memberof Torrent
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    peerLimit: number;
    /**
     * 
     * @type {Array&lt;Peer&gt;}
     * @memberof Torrent
     */
    peers: Array<Peer>;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    peersConnected: number;
    /**
     * 
     * @type {Array&lt;PeersFrom&gt;}
     * @memberof Torrent
     */
    peersFrom: Array<PeersFrom>;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    peersGettingFromUs: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    peersSendingToUs: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    percentDone: number;
    /**
     * 
     * @type {string}
     * @memberof Torrent
     */
    pieces: string;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    pieceCount: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    pieceSize: number;
    /**
     * 
     * @type {Array&lt;number&gt;}
     * @memberof Torrent
     */
    priorities: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof Torrent
     */
    primaryMimeType: string;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    queuePosition: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    rateDownloadBs: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    rateUploadBs: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    recheckProgress: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    secondsDownloading: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    secondsSeeding: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    seedIdleLimit: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    seedIdleMode: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    seedRatioLimit: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    seedRatioMode: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    sizeWhenDone: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    startDate: number;
    /**
     * 
     * @type {string}
     * @memberof Torrent
     */
    status: TorrentStatusEnum;
    /**
     * 
     * @type {Array&lt;Tracker&gt;}
     * @memberof Torrent
     */
    trackers: Array<Tracker>;
    /**
     * 
     * @type {Array&lt;TrackerStats&gt;}
     * @memberof Torrent
     */
    trackerStats: Array<TrackerStats>;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    totalSize: number;
    /** 
     * @type {string}
     * @memberof Torrent
     */
    torrentFile: string;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    uploadedEver: number;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    uploadLimit: number;
    /**
     * 
     * @type {boolean}
     * @memberof Torrent
     */
    uploadLimited: boolean;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    uploadRatio: number;
    /**
     * 
     * @type {Array&lt;boolean&gt;}
     * @memberof Torrent
     */
    wanted: Array<boolean>;
    /**
     * 
     * @type {Array&lt;string&gt;}
     * @memberof Torrent
     */
    webseeds: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof Torrent
     */
    webseedsSendingToUs: number;
}

/**
    * @export
    * @enum {string}
    */
export enum TorrentStatusEnum {
    Stopped = 'Stopped',
    QueuedToCheckFiles = 'Queued to check files',
    CheckingFiles = 'Checking files',
    QueuedToDonwload = 'Queued to donwload',
    Downloading = 'Downloading',
    QueuedToSeed = 'Queued to seed',
    Seeding = 'Seeding'
}

